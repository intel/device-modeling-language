/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.4;

device test;

import "utility.dml";
import "testing.dml";

// Marker template to search for
template t {}

// Note that each X in Y does not count Y even if Y is an X
bank a is t {
    register r size 4 @ 0x0 is t;
    group b[i < 2] is t {}
    group c[i < 3] {}
}

bank b[i < 2] {
    group g is t;
    register d[i < 3][j < 6] size 4 is (unmapped);
}

port d[i < 3][j < 6] {}

method test() throws {
    // Sequences
    assert (each t in (a.b[0])).len == 0;
    assert (each t in (a)).len == 3;
    assert (each t in (a)).len == 3;
    assert (each group in (a)).len == 5;
    assert (each t in (dev)).len == 3;
    assert (each t in (b[0])).len == 1;
    assert (each group in (dev)).len == 7;
    // Regular lists
    assert [0, 1, 1, 3, 2, 1].len == 6;
    assert [0, 1, [2, 2, 2], 3].len == 4;
    // Check that .len on lists is constant
    #if ([0, 1, 2].len != 3) {
        assert false;
    }
    // Object arrays
    assert b.len == 2;
    assert d.len == 3;
    assert d[0].len == 6;
    assert b[0].d.len == 3;
    assert b[0].d[0].len == 6;
    // Check that .len on object arrays is constant
    #if (b.len != 2) {
        assert false;
    }

    // Value arrays
    local int xs[2];
    assert xs.len == 2;
    local int ys[2][3];
    assert ys.len == 2;
    assert ys[0].len == 3;
    // Check that .len on value arrays is constant
    #if (xs.len != 2) {
        assert false;
    }
}
