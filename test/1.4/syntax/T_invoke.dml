/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.4;

device test;

import "testing.dml";

// Test the new method invocation syntax of DML 1.4

inline method m1(inline i) -> (int) {
    return i;
}

method m2(int i) -> (int) {
    return i;
}

method m3() -> (int, int, int) {
    return (3, 4, 5);
}

method m4() {}

method test() throws {
    local int i;
    local int j;
    local int k;
    i = m1(1);
    assert i == 1;
    (i) = m2(2);
    assert i == 2;
    (i, j, k) = m3();
    assert i == 3 && j == 4 && k == 5;
    if (i == j)
        // this code is dead, but triggers code generation.  For now, we just
        // verify that code is generated; functionality is covered well enough
        // by DML 1.2 tests.
        after 1 s: m4();
}
