/*
  Â© 2021-2023 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.4;

device test;

import "simics/simulator/conf-object.dml";

attribute b is (bool_attr) {
//    method get() -> (attr_value_t) default { return default(); }
//    method set(attr_value_t value) throws default { default(value); }
}

attribute u is (uint64_attr) {
//    method get() -> (attr_value_t) default { return default(); }
//    method set(attr_value_t value) throws default { default(value); }
}

attribute i is (int64_attr) {
//    method get() -> (attr_value_t) default { return default(); }
//    method set(attr_value_t value) throws default { default(value); }
}

attribute f is (double_attr) {
//    method get() -> (attr_value_t) default { return default(); }
//    method set(attr_value_t value) throws default { default(value); }
}

attribute b2 is (bool_attr) {
    param init_val = true;
}

attribute u2 is (uint64_attr) {
    param init_val = 33;
}

attribute i2 is (int64_attr) {
    param init_val = -33;
}

attribute f2 is (double_attr) {
    param init_val = 3.3;
}

attribute overridden_init is (bool_attr) {
    param init_val = true;
    method init() { }
}


method init() {
    b.val = true;
    assert SIM_attr_boolean(SIM_get_attribute(dev.obj, "b"));
    local attr_value_t bool_attr = SIM_make_attr_boolean(false);
    SIM_set_attribute(dev.obj, "b", &bool_attr);
    assert !b.val;

    local uint64 large0 = 0x8765432112345678;
    local uint64 large1 = 0x9876543212345678;

    u.val = large0;
    assert SIM_attr_is_uint64(SIM_get_attribute(dev.obj, "u"));
    assert cast(SIM_attr_integer(SIM_get_attribute(dev.obj, "u")), uint64)
        == large0;
    local attr_value_t large_attr = SIM_make_attr_uint64(large1);
    SIM_set_attribute(dev.obj, "u", &large_attr);
    assert u.val == large1;
    assert SIM_clear_exception() == 0;
    local attr_value_t minus_one_attr = SIM_make_attr_int64(-1);
    SIM_set_attribute(dev.obj, "u", &minus_one_attr);
    assert SIM_clear_exception() != 0;

    i.val = -134;
    assert SIM_attr_integer(SIM_get_attribute(dev.obj, "i")) == -134;
    assert SIM_attr_is_int64(SIM_get_attribute(dev.obj, "i"));
    SIM_set_attribute(dev.obj, "i", &minus_one_attr);
    assert i.val == -1;
    assert SIM_clear_exception() == 0;
    SIM_set_attribute(dev.obj, "i", &large_attr);
    assert SIM_clear_exception() != 0;

    f.val = 3.14;
    assert SIM_attr_floating(SIM_get_attribute(dev.obj, "f")) == 3.14;
    local attr_value_t float_attr = SIM_make_attr_floating(1.414);
    SIM_set_attribute(dev.obj, "f", &float_attr);
    assert f.val == 1.414;

    assert b2.val;
    assert u2.val == 33;
    assert i2.val == -33;
    assert f2.val == 3.3;
    assert !overridden_init.val;
}
