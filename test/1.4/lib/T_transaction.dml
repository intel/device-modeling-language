/*
  Â© 2021 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/

dml 1.4;

device test;

bank b {
    param use_io_memory = false;

    method transaction_access(transaction_t *t, uint64 offset,
                              void *aux) -> (exception_type_t) {
        return default(t, offset, cast(1234, void *));
    }
    method get(uint64 offset_, uint64 size_) -> (uint64) throws {
        saved uint64 offset;
        offset = offset_;
        saved uint64 size;
        size = size_;
        if (offset == 13)
            throw;
        return 4711;
    }
    method set(uint64 offset_, uint64 size_, uint64 value_) {
        saved uint64 offset;
        offset = offset_;
        saved uint64 size;
        size = size_;
        saved uint64 value;
        value = value_;
    }
    method read(uint64 offset_, uint64 enabled_bytes, void *aux_)
        -> (uint64) throws {
        saved uint64 offset;
        offset = offset_;
        saved uint64 mask;
        mask = enabled_bytes;
        saved uint64 aux;
        aux = cast(aux_, uintptr_t);
        if (offset == 13)
            throw;
        return 4711;
    }
    method write(uint64 offset_, uint64 value_, uint64 enabled_bytes,
                 void *aux_) throws {
        saved uint64 offset;
        offset = offset_;
        saved uint64 value;
        value = value_;
        saved uint64 mask;
        mask = enabled_bytes;
        saved uint64 aux;
        aux = cast(aux_, uintptr_t);
        if (offset == 13)
            throw;
    }
}
