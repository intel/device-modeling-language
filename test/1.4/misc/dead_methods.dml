/*
  Â© 2024 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/

dml 1.4;

/// COMPILE-ONLY

device test;

// for the dead_dml_methods.py script

// Relative path to test that DMLC resolves the path in the sources list
import "../misc/dead_methods_imported.dml";

// test that dead_dml_methods.traverse_ast tolerates all kinds of AST nodes
param p = 3;
typedef int dml_type;
extern typedef int c_type;
constant c = 4;
extern void f(void);
loggroup lg;
template nothing {}
is nothing;
saved int sa;
session int se;
hook () h;
#if (false) { error; }
header %{ %}
footer %{ %}

// DEAD
method dead() { }

// DEAD
method dead_long() -> (int)
{
    return 0;
}

// not dead
method live() -> (int) {
    return 0;
}

// not dead only thanks to export
method exported() {
}

export exported as "exported";

// not dead: inline methods are excluded from analysis
inline method inline_dead(inline x) -> (int) {
    return x;
}

// not dead
method init() {
    live();
}
