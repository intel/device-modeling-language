/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.4;

import "utility.dml";

bank b1 {
    param overlapping = true;
    param register_size = 4;

    register R1 @ 0x00 is (read, write) {
        param init_val = 0x1;
    }
    register R2 @ 0x04 is (read, write) {
        param init_val = 0x2;
    }
    register R3 @ 0x08 is (read, write) {
        param init_val = 0x3;
    }

    // The first byte of this register should be outside of the max address
    register edge @ 0x7ffffffffffffffc is (read, write) {
        param init_val = 0xBADC0DED;
    }
}

bank b2 {
    param register_size = 4;

    register R4 @ 0x00 is (read, write) {
        param init_val = 0x4;
    }
    register R5 @ 0x04 is (read, write) {
        param init_val = 0x5;
    }
    register R6 @ 0x08 is (read, write) {
        param init_val = 0x6;
    }
    register R7 @ 0x0c is (read, write) {
        param init_val = 0x7;
        method read()->(uint64) {
            R4.val = R5.val = R6.val = 0;
            return 0;
        }
    }
}

bank ba[i < 2] {
    register r size 4 @ 0x00 is (read, write) {
        param init_val = 0x0;
    }
}

bank le {
    param byte_order = "little-endian";
    param overlapping = true;
    param register_size = 4;

    register R1 @ 0x00 is (read, write) {
        param init_val = 0x01020304;
    }
    register R2 @ 0x04 is (read, write) {
        param init_val = 0x0A0B0C0D;
    }
}

bank be {
    param byte_order = "big-endian";
    param overlapping = true;
    param register_size = 4;

    register R1 @ 0x00 is (read, write) {
        param init_val = 0x01020304;
    }
    register R2 @ 0x04 is (read, write) {
        param init_val = 0x0A0B0C0D;
    }
}
