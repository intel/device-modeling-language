/*
  Â© 2021-2023 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.4;
device test;

typedef layout "big-endian" {
    bitfields 24 {
        uint8 c @ [23:16];
        int12 b @ [15:4];
        uint4 a @ [3:0];
    } b24;
    bitfields 8 {
        uint4 a @ [5:2];
    } b8;
} bl_t;

typedef layout "little-endian" {
    bitfields 24 {
        uint8 c @ [23:16];
        int12 b @ [15:4];
        uint4 a @ [3:0];
    } b24;
    bitfields 8 {
        uint4 a @ [5:2];
    } b8;
} ll_t;

method init() {
    local uint8 *ptr;
    local bl_t b;
    local ll_t l;

    assert sizeoftype bl_t == 4;
    assert sizeoftype ll_t == 4;

    local int i;
    ptr = cast(&b, uint8*);
    for (i = 0; i < 4; ++i)
        ptr[i] = i + 0xf0;

    assert b.b24 == 0xf0f1f2;
    assert b.b24.a == 0x2;
    assert b.b24.b == 0xf1f;
    assert b.b24.c == 0xf0;
    assert b.b8 == 0xf3;
    assert b.b8.a == 0xc;

    ptr = cast(&l, uint8*);
    for (i = 0; i < 4; ++i)
        ptr[i] = i + 0xf0;

    assert l.b24 == 0xf2f1f0;
    assert l.b24.a == 0x0;
    assert l.b24.b == 0xf1f;
    assert l.b24.c == 0xf2;
    assert l.b8 == 0xf3;
    assert l.b8.a == 0xc;
}
