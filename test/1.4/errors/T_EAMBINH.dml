/*
  Â© 2021 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.4;

device test;

// Declarations from an 'in each' override those of the extended template, but
// are overridden by declarations from the surrounding template
template sub { }
template t {
    in each sub {
        /// ERROR EAMBINH
        param x default 1;
    }
}

template t2 {
    port p {
        is sub;
        /// ERROR EAMBINH
        param x default 2;
    }
}

is t;
is t2;

// conflicting type declarations for the same parameter
template tp1 {
    param p : int;
}
template tp2 {
    param p : int;
}
/// ERROR EAMBINH
template tp3 is (tp1, tp2) {
    param p = 3;
}

template asm1 {
    shared method m();
}
template asm2 {
    shared method m();
}
template asm3 {
    shared method m();
}
/// ERROR EAMBINH
template asm4 is (asm1, asm2) {
    shared method m() {}
}
/// ERROR EAMBINH
template asm5 is (asm1, asm3) {
    shared method m() {}
}

template asm6 is asm1 {
    shared method m() default {}
}
template asm7 is asm1 {
    shared method m() default {}
}
template asm8 is (asm6, asm7) {
    shared method m() {}
}

template asm9 is asm1 {
    shared method m() {}
}

/// ERROR EAMBINH
template asm10 is (asm6, asm9) {}

/// ERROR EAMBINH
group g1 is (asm6, asm7);

// no error
group g2 is (asm6, asm7) {
    method m() {}
}

// Redundancy as a smoke test that ancestor vtable merging works properly
// no error
group g3 is (asm6, asm7, asm1, asm8);
