/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device test;

import "utility.dml";
import "testing.dml";

// Verify that index and indexvar parameters get the correct values

bank b {
    parameter register_size = 4;
    register r @ 0 {
        field f[i in 0..1][j in 0..1] @ [2 * $i + $j];
    }
    register ra[i in 0..1] @ 4 + 4 * $i;
    register rma[i in 0..1][j in 0..1] @ 12 + 8 * $i + 4 * $j;
    group gma {
        register r @ 32;
    }
}

bank ba[bi in 0..3] {
    parameter register_size = 4;
    register r @ 0 {
        field f[i in 0..1][j in 0..1] @ [2 * $i + $j];
    }
    register ra[i in 0..1] @ 4 + 4 * $i;
    register rma[i in 0..1][j in 0..1] @ 12 + 8 * $i + 4 * $j;
    group gma {
        register r @ 32;
    }
}

method test() -> (bool ok) {
    ok = !defined($b.index);
    ok = ok && !defined($b.indexvar);
    ok = ok && !defined($b.r.index);
    ok = ok && !defined($b.r.indexvar);
    ok = ok && !defined($b.gma.index);
    ok = ok && !defined($b.gma.indexvar);
    ok = ok && !defined($b.gma.r.index);
    ok = ok && !defined($b.gma.r.indexvar);
    local int i;
    local int j;
    local int bi;
    for (i = 0; i < 2; i++) {
        local int i_ = i;
        ok = ok && $b.ra[i].index == i_;
        ok = ok && $b.ra[i].indexvar == "i";
        for (j = 0; j < 2; j++) {
            local int j_ = j;
            ok = ok && $b.r.f[i][j].index[0] == i_;
            ok = ok && $b.r.f[i][j].index[1] == j_;
            ok = ok && !defined($b.r.f[i][j].indexvar);
            ok = ok && $b.rma[i][j].index[0] == i_;
            ok = ok && $b.rma[i][j].index[1] == j_;
            ok = ok && !defined($b.rma[i][j].indexvar);
        }
    }
    for (bi = 0; bi < 4; bi++) {
        local int bi_ = bi;
        ok = ok && $ba[bi].index == bi_;
        ok = ok && $ba[bi].indexvar == "bi";
        ok = ok && !defined($ba[bi].r.index);
        ok = ok && !defined($ba[bi].r.indexvar);
        ok = ok && !defined($ba[bi].gma.index);
        ok = ok && !defined($ba[bi].gma.indexvar);
        ok = ok && !defined($ba[bi].gma.r.index);
        ok = ok && !defined($ba[bi].gma.r.indexvar);
        for (i = 0; i < 2; i++) {
            local int i_ = i;
            ok = ok && $ba[bi].ra[i].index == i_;
            ok = ok && $ba[bi].ra[i].indexvar == "i";
            for (j = 0; j < 2; j++) {
                local int j_ = j;
                ok = ok && $ba[bi].r.f[i][j].index[0] == i_;
                ok = ok && $ba[bi].r.f[i][j].index[1] == j_;
                ok = ok && !defined($ba[bi].r.f[i][j].indexvar);
                ok = ok && $ba[bi].rma[i][j].index[0] == i_;
                ok = ok && $ba[bi].rma[i][j].index[1] == j_;
                ok = ok && !defined($ba[bi].rma[i][j].indexvar);
            }
        }
    }
}
