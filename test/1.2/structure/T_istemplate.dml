/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device test;
import "testing.dml";
import "simics/devs/signal.dml";

template X {
    parameter Y = true;
}

bank b is (X) {
    group g1 is (X) {
        register r1 size 4 @0 is (X) {
            field f [31:0] is (X);
        }
        register r2[4] size 4 @4+4*$i is (X);
    }
    group g2[4] is (X);
}

connect c1 is (X) {
    interface signal is (X);
}

connect c2[4] is (X) {
    interface signal is (X);
}

attribute a1 is (X) {
    parameter allocate_type = "bool";
}

attribute a2[4] is (X) {
    parameter allocate_type = "bool";
}

event e is (X);

port p is (X);

implement signal is (X) {
    method signal_lower() {}
    method signal_raise() {}
}

method test -> (bool ok)
{
    ok = $b.Y && $b.g1.Y && $b.g1.r1.Y && $b.g1.r1.f.Y && $b.g1.r2[0].Y &&
        $b.g2[0].Y && $c1.Y && $c2[0].Y && $a1.Y && $a2[0].Y && $e.Y && $p.Y &&
        $signal.Y;

    /* workaround for another problem with events */
    if (!ok)
        inline $e.post(0, NULL);
}
