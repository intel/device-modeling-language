/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device test;
import "testing.dml";
import "io-memory.dml";

// Test that fields can contain 'data'.

template testfield {
    data uint16 d;
    method test {
        // This checks if the same data storage is used multiple times
        assert $d == 0;
        $d = 1;
    }
    //if (!$allocate && !$fields[0].explicit) {
    method read -> (value) {
        value = $d;
    }
    method write(value) {
        $d = value;
        if ($allocate)
            $this = $d;
    }
    method get -> (value) {
        value = $d;
    }
    method set(value) {
        $d = value;
    }
    //}
}

bank regs {
    parameter function = 0;
    register r1 size 4 @ 0 {
        field f[31:0] is (testfield) {
            parameter allocate = true;
        }
    }
    register r2 size 4 @ 4 {
        field f[31:0] is (testfield) {
            parameter allocate = false;
        }
    }
}

method test -> (bool ok)
{
    foreach r in ($regs.mapped_registers) {
        log "info": "testing %s", r.qname;
        foreach f in (r.fields) {
            inline f.test;
        }
    }
    ok = true;
}
