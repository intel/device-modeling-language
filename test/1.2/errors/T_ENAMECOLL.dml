/*
  Â© 2021 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device test;

/// ERROR ENAMECOLL
method bar() default { }
/// ERROR ENAMECOLL
method bar() default { }

template method_clash_1 {
    /// ERROR ENAMECOLL
    method bar { }
    /// ERROR ENAMECOLL
    method bar { }
}
port method_clash_1 is (method_clash_1);

// This is disallowed mainly because it's pointless (you can just as well make
// the trait method abstract)
trait method_clash_2 {
    template {
        /// ERROR ENAMECOLL
        method m() nothrow default {}
    }
    /// ERROR ENAMECOLL
    method m() default {}
}
port method_clash_2 is (method_clash_2);

import "simics/devs/memory-space.dml";
connect c {
    // no error (used to be an error)
    interface memory_space;
    interface memory_space;
}

// No error here (error with --no-compat=dml12_misc)
extern t3;
extern int t3;
extern t3;
extern int t3;

extern t4;
/// ERROR EEXTERNINCOMP
extern int t4;
extern t4;
/// ERROR EEXTERNINCOMP
extern bool t4;

// No error!
extern typedef int t5;
extern t5;

port p0 {
    /// ERROR ENAMECOLL
    parameter foo = 1; 
    /// ERROR ENAMECOLL
    parameter foo = 1;
}

port p2 {
    /// ERROR ENAMECOLL
    parameter baz default 1;
    /// ERROR ENAMECOLL
    parameter baz default 1;
}

/// WARNING WEXPERIMENTAL T_ENAMECOLL.dml
/// ERROR ENAMECOLL
typedef int tr0;
/// ERROR ENAMECOLL
trait tr0 {}

/// ERROR ENAMECOLL
typedef int t1;
/// ERROR ENAMECOLL
template t1 {}

/// ERROR ENAMECOLL
trait tr1 {}
/// ERROR ENAMECOLL
trait tr1 {}

/// ERROR ENAMECOLL
trait tr2 {}
/// ERROR ENAMECOLL
template tr2 {}

method init() {
    // no error! (error with --no-compat=dml12_int)
    local layout "little-endian" {
        uint32 a;
        uint32 a;
    } x;
    x.a = 4;

    // no error!
    local bitfields 32 {
        uint16 a @ [15:0];
        uint16 a @ [31:16];
    } y;
    y.a = 4;
}
