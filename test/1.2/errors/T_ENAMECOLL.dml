/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device test;

/// ERROR ENAMECOLL
parameter c0 = 5;
/// ERROR ENAMECOLL
connect c0;

/// ERROR ENAMECOLL
parameter c1 = 5;
/// ERROR ENAMECOLL
method c1 {
}

/// ERROR ENAMECOLL
parameter c2 = 1;
/// ERROR ENAMECOLL
data int c2;

/// ERROR ENAMECOLL
connect c3;
/// ERROR ENAMECOLL
attribute c3;

/// ERROR ENAMECOLL
connect c4;
/// ERROR ENAMECOLL
method c4 { }

/// ERROR ENAMECOLL
method c5 { }
/// ERROR ENAMECOLL
data int c5;

/// ERROR ENAMECOLL
method bar default { }
/// ERROR ENAMECOLL
method bar default { }

template method_clash_1 {
    /// ERROR ENAMECOLL
    method bar { }
    /// ERROR ENAMECOLL
    method bar { }
}
port method_clash_1 is (method_clash_1);

// This is disallowed mainly because it's pointless (you can just as well make
// the trait method abstract)
trait method_clash_2 {
    template {
        /// ERROR ENAMECOLL
        method m() nothrow default {}
    }
    /// ERROR ENAMECOLL
    method m() default {}
}
port method_clash_2 is (method_clash_2);

template structural_clash {
    // EAMBINH might be a better description of this clash
    /// ERROR ENAMECOLL
    parameter p default 1;
    group g {
        /// ERROR ENAMECOLL
        parameter p default 2;
    }
}
bank b2 is (structural_clash) {
    group g is (structural_clash);
}

/// ERROR ENAMECOLL
connect c6;
/// ERROR ENAMECOLL
data int c6;

bank b {
    /// ERROR ENAMECOLL
    register x[4] size 1 @ undefined;
    /// ERROR ENAMECOLL
    group x[4];
}

/// ERROR ENAMECOLL
template c7 { }
/// ERROR ENAMECOLL
template c7 { }

/// ERROR ENAMECOLL
data int c8;
/// ERROR ENAMECOLL
data int c8;

import "simics/devs/memory-space.dml";
connect c {
    // no error (used to be an error)
    interface memory_space;
    interface memory_space;
}

// no error!
extern typedef int t0;
extern int t0;

/// ERROR ENAMECOLL
typedef int t1;
/// ERROR ENAMECOLL
typedef int t1;

/// ERROR ENAMECOLL
extern int t2;
/// ERROR ENAMECOLL
extern int t2;

// No error here
extern t3;
extern int t3;
extern t3;

extern t4;
/// ERROR ENAMECOLL
extern int t4;
extern t4;
/// ERROR ENAMECOLL
extern int t4;

// No error!
extern typedef int t5;
extern t5;

/// ERROR ENAMECOLL
struct s { int i; }
/// ERROR ENAMECOLL
struct s { int i; }

typedef struct {
    /// ERROR ENAMECOLL
    int i;
    /// ERROR ENAMECOLL
    int i;
} strange_struct;

loggroup g;
/// ERROR ENAMECOLL
loggroup g;

port p0 {
    /// ERROR ENAMECOLL
    parameter foo = 1; 
    /// ERROR ENAMECOLL
    parameter foo = 1;
}

port p2 {
    /// ERROR ENAMECOLL
    parameter baz default 1;
    /// ERROR ENAMECOLL
    parameter baz default 1;
}

/// WARNING WEXPERIMENTAL T_ENAMECOLL.dml
/// ERROR ENAMECOLL
typedef int tr0;
/// ERROR ENAMECOLL
trait tr0 {}

/// ERROR ENAMECOLL
typedef int t1;
/// ERROR ENAMECOLL
template t1 {}

/// ERROR ENAMECOLL
trait tr1 {}
/// ERROR ENAMECOLL
trait tr1 {}

/// ERROR ENAMECOLL
trait tr2 {}
/// ERROR ENAMECOLL
template tr2 {}

trait tr3 {
    /// ERROR ENAMECOLL
    method m() default {}
    /// ERROR ENAMECOLL
    method m() default {}

    /// ERROR ENAMECOLL
    parameter int i;
    /// ERROR ENAMECOLL
    parameter int i;

    /// ERROR ENAMECOLL
    method mp() default {}
    /// ERROR ENAMECOLL
    parameter int mp;

    /// ERROR ENAMECOLL
    parameter int pm;
    /// ERROR ENAMECOLL
    method pm() default {}

    /// ERROR ENAMECOLL
    session int ses;
    /// ERROR ENAMECOLL
    session int ses;
}

// a method cannot override a parameter, and a parameter cannot override
// anything.
trait tr4 {
    /// ERROR ENAMECOLL
    method m1() default {}
    /// ERROR ENAMECOLL
    method m2() {}
    /// ERROR ENAMECOLL
    method m3() default {}
    /// ERROR ENAMECOLL
    parameter int i0;
    /// ERROR ENAMECOLL
    parameter int i1;
    /// ERROR ENAMECOLL
    session int ses;
}
trait tr5 {
    is tr4;
    /// ERROR ENAMECOLL
    parameter int m1;
    /// ERROR ENAMECOLL
    parameter int m2;
    /// ERROR ENAMECOLL
    session int m3;
    /// ERROR ENAMECOLL
    method i0();
    /// ERROR ENAMECOLL
    parameter int i1;
    /// ERROR ENAMECOLL
    session int ses;
}
template t {
    is tr4;
    /// ERROR ENAMECOLL
    parameter m1 = 5;
    /// ERROR ENAMECOLL
    parameter m2 = 5;
    /// ERROR ENAMECOLL
    method i0() {}
    parameter i1 = 0;
}
port xirph is (t);

trait tr8 {
    /// ERROR ENAMECOLL
    method m() default {}
}

bank tb {
    /// ERROR ENAMECOLL
    register m size 1 @ undefined;
    is tr8;
}

bank b3 {
    /// ERROR ENAMECOLL
    register r1[4][4] size 4 @ undefined;
    /// ERROR ENAMECOLL
    register r2[i in 0..3][i in 0..3] size 4 @ undefined;
}

method init() {
    // no error!
    local layout "little-endian" {
        uint32 a;
        uint32 a;
    } x;
    x.a = 4;

    // no error!
    local bitfields 32 {
        uint16 a @ [15:0];
        uint16 a @ [31:16];
    } y;
    y.a = 4;
}
