/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device eassign;

/// ERROR EUNDEF
constant undef = undefined;

/// ERROR EUNDEF
constant undef_list = [0, [undefined, 2]];

// no error
parameter x = undefined;

/// ERROR EUNDEF
parameter y = undefined.x;

/// ERROR EUNDEF
if ($y) {}

method f(int x) {
}

/// WARNING WEXPERIMENTAL
trait tr {
    parameter int traitparam;
}
is tr;
/// ERROR EUNDEF
parameter traitparam = undefined;

method m() -> (x) {}

method m2(x) {
    /// ERROR EUNDEF
    x + 3;
}
method m3(x) {
    if (defined x) {
    }
}

method init {
    /// ERROR EUNDEF
    local int z = undefined;
    /// ERROR EUNDEF
    local int a[undefined];
    /// ERROR EUNDEF
    [1, 2, 3][undefined];
    local int i[4];
    /// ERROR EUNDEF
    i[undefined];

    /// ERROR EUNDEF
    if (undefined)
        ;
    /// ERROR EUNDEF
    while (undefined)
        ;
    /// ERROR EUNDEF
    for (; undefined; )
        ;
    /// ERROR EUNDEF
    do {} while (undefined);
    /// ERROR EUNDEF
    switch (undefined) {
    }
    /// ERROR EUNDEF
    call $f(undefined);
    /// ERROR EUNDEF
    inline $f(undefined);
    /// ERROR EUNDEF
    undefined;
    /// ERROR EUNDEF
    undefined + 2;
    /// ERROR EUNDEF
    2 + undefined;

    /// ERROR EUNDEF
    if ($x == 1) ;

    /// ERROR EUNDEF
    undefined.x;

    /// ERROR EUNDEF
    undefined[2];

    /// ERROR EUNDEF
    inline $m() -> (undefined);

    /// ERROR EUNDEF
    inline $m2(undefined);
    // no error: parameter not used
    inline $m3(undefined);
}
