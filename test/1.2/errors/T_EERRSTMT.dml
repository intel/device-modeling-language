/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device eerrstmt;

/// SCAN-FOR-TAGS EERRSTMT_dml14.dml
import "EERRSTMT_dml14.dml";

// this line appears as context for an error statement in dml-builtins.dml
/// ERROR EERRSTMT
bank b {
    parameter overlapping = true;
    parameter miss_pattern = -1;
}

port p0 {
    /// ERROR EERRSTMT
    error;
}
port p1 {
    /// ERROR EERRSTMT
    error "foo";
}

event e;

method m1() {
    /// ERROR EERRSTMT
    error;
}

method m2() {
    /// ERROR EERRSTMT
    error "";
}

method m3() {
    /// ERROR EERRSTMT
    error "message one";

    /// ERROR EERRSTMT
    error "message two";
}

method m4() {
    /// ERROR EERRSTMT
    inline $e.stop();
}

method empty() {}

method m5() {
    try {
        inline $empty();
    } catch {
        // no error here, see SIMICS-9503
        error;
    }

    // no error
    while (false) error;
}

method init {
    // an error message aborts the processing of a method, so we encapsulate
    // each test case in one method
    call $m1();
    call $m2();
    call $m3();
    call $m4();
    call $m5();
    call $m_dml14();
}
