/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device test;

// Suppress propagated error where classname is used as string
/// ERROR EPTYPE dml-builtins.dml
/// ERROR EBTYPE
parameter classname = 17;

extern typedef struct { int i; } foo_interface_t;

implement foo {
    /// ERROR EBTYPE
    method i() {}
}

/// ERROR EPTYPE
bank B {
    register r1 size 4 @ undefined {
        field f[1] {
            /// ERROR EBTYPE
            parameter allocate = "false";
        }
        parameter configuration = "none";
    }
    register r2 size 4 @ undefined {
        /// ERROR EBTYPE
        parameter documentation = 13;
    }
    register r3[3] size 4 @ undefined;
    register r4 size 4 {
        /// ERROR EBTYPE
        parameter offset = "zero";
    }
    register r5 size 4 @ undefined {
        /// ERROR EBTYPE
        parameter desc = "invalid utf-8: \xcc";
    }
}

method init() {
    /// ERROR EBTYPE
    local char *p = new char[true];

    local char *pi;
    /// ERROR EBTYPE
    pi[3.14];
    local int i;
    /// ERROR EBTYPE
    i[3.14] = 0;
    local layout "little-endian" { uint32 x; } l;
    local bitfields 32 { uint32 x @ [31:0]; } b;
    // no error
    pi[l.x];
    pi[b.x];
    $B.r3[l.x];
    $B.r3[b.x];
    i[l.x];

    /// ERROR EBTYPE
    $B.r3["hej"].size;

    /// ERROR EBTYPE
    -true;
    /// ERROR EBTYPE
    +true;
    /// ERROR EBTYPE
    ~true;
}

data bitfields 32 {
    /// ERROR EBTYPE
    uint1 a @ ["x":31];
} a;

data bitfields 32 {
    /// ERROR EBTYPE
    uint1 b @ [0:"x"];
} b;
