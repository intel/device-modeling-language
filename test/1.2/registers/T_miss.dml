/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device test;

attribute missed { parameter allocate_type = "bool"; }

bank b {
    parameter partial = true;
    parameter overlapping = true;

    register a size 2 @ 10 {
        method read() -> (value) {
            $this = 0x1234;
        }
    }

    register b[4] size 1 @ 20 + $i {
        method write(value) {
            if ($i == 2)
                throw;
            $this = value;
        }
    }

    method miss_access(mop, offs, size) { $missed = true; }
}

bank nopart {
    parameter partial = false;
    parameter overlapping = true;
    register r[4] size 2 @ 10 + $i * 2 {
        method read() -> (value) {
            $this = 0x1111;
        }
    }

    register a size 2 @ 20;
    register b size 4 @ 22;

    method miss_access(mop, offs, size) { $missed = true; }
}

bank noover {
    parameter partial = true;
    parameter overlapping = false;
    register r[2] size 2 @ 10 + $i * 2;

    method miss_access(mop, offs, size) { $missed = true; }
}
