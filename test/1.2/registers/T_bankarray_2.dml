/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device test;
import "testing.dml";

// This is bug 20328

// test is not relevant in 1.4

bank b[3] {
    parameter register_size = 4;
    register m      @ 0;
    register ma[i in 0..1][j in 0..1]  @ 8 + $i * 8 + $j * 4;
    register u      @ undefined;
    register ua[i in 0..1][j in 0..1]  @ undefined;
    register n      @ undefined { parameter regnum = 1; }
    register na[i in 0..2][j in 0..2] @ undefined {
        parameter regnum = 2 + $i * 3 + $j;
    }

    method count -> (mc, uc, nc) {
        mc = uc = nc = 0;
        foreach r in ($mapped_registers)
            mc++;
        foreach r in ($unmapped_registers)
            uc++;
        foreach r in ($numbered_registers)
            nc++;
    }
}

method is_ok(mc, uc, nc) -> (bool ok) {
    ok = mc == 5 && uc == 15 && nc == 10;
}

method test -> (bool ok) {
    local int mc = 0;
    local int uc = 0;
    local int nc = 0;

    // explicit indexing
    foreach r in ($b[0].mapped_registers)
        mc++;
    foreach r in ($b[0].unmapped_registers)
        uc++;
    foreach r in ($b[0].numbered_registers)
        nc++;
    inline $is_ok(mc, uc, nc) -> (ok);
    if (!ok)
        return;

    // implicit indexing
    inline $b[1].count() -> (mc, uc, nc);
    inline $is_ok(mc, uc, nc) -> (ok);
}
