/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device test;
import "testing.dml";

method m() -> (int i) {
    i = 4;
    throw;
}

method t() { throw; }

method nt() nothrow {
    // it's OK to throw in a nothrow method, as long as the exception is
    // caught.
    try { throw; } catch {}
    try { call $t(); } catch {}
    try { inline $t(); } catch {}
}

method test() -> (bool ok) {
    ok = false;

    local int i;
    try {
        i = 1;
        throw;
        i = 2;
    } catch {
        ok = i == 1;
    }
    try {
        i = 3;
        call $m() -> (i);
    } catch {
    }

    if (i != 3)
        return;

    try {
        local int i = 1;
        if (i == 1)
            throw;
    } catch {
        // it's OK for a catch block to start with a declaration
        local int j;
        // variable declared in the try block is not visible in the catch block
        ok = i == 3;
    }

    $nt();
}
