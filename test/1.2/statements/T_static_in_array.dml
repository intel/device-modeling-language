/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device test;
import "testing.dml";

bank b[i in 0..3] {
    method f -> (int result) {
        static int d = 0;
        d += $i;
        result = d;
    }
    register r[j in 0..2][k in 0..1] size 4 @ undefined {
        method f -> (int result) {
            static int d = 0;
            d += $i * 6 + $j * 2 + $k;
            result = d;
        }
    }
}

method test -> (bool ok) {
    local int i;
    local int j;
    local int k;
    local int result;
    for (i = 0; i < 4; ++i) {
        call $b[i].f() -> (result);
        assert (result == i);
        for (j = 0; j <  3; ++j) {
            for (k = 0; k <  2; ++k) {
                call $b[i].r[j][k].f() -> (result);
                assert (result == i * 6 + j * 2 + k);
            }
        }
        for (j = 0; j <  3; ++j) {
            for (k = 0; k <  2; ++k) {
                call $b[i].r[j][k].f() -> (result);
                assert (result == (i * 6 + j * 2 + k) * 2);
            }
        }
    }
    ok = true;
}
