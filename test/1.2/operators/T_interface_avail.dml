/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device test;
import "simics/devs/signal.dml";

// Check that an interface reference can be uses as a boolean
// expression to check whether the connected object actually
// implemented the interface.
// (bug 7611)

connect o1 {
    interface cycle {
        parameter required = true;
    }
    interface signal {
        parameter required = false;
    }
}

connect o2 {
    interface cycle {
        parameter required = false;
    }
}

attribute test1 {
    parameter type = "b";
    parameter configuration = "pseudo";
    method get -> (attr_value_t v) {
        local bool ok = true;
        // When this is run, there are no connections
        assert (!$o1.obj && !$o2.obj);

        ok = true;
        if ($o1.cycle)
            ok = false;
        if ($o1.signal)
            ok = false;
        if ($o2.cycle)
            ok = false;
        v = SIM_make_attr_boolean(ok);
    }
}

attribute test2 {
    parameter type = "b";
    parameter configuration = "pseudo";
    method get -> (attr_value_t v) {
        local bool ok = true;
        // When this is run, o1 and o2 are connected to a clock.
        assert ($o1.obj && $o2.obj);

        if (!$o1.cycle)
            ok = false;
        if ($o1.signal)
            ok = false;
        if (!$o2.cycle)
            ok = false;
        v = SIM_make_attr_boolean(ok);
    }
}

attribute test3 {
    parameter type = "b";
    parameter configuration = "pseudo";
    method get -> (attr_value_t v) {
        local bool ok = true;
        // When this is run, o1 is connected to a cpu, and o2 is
        // connected to something else.
        assert ($o1.obj && $o2.obj);

        if (!$o1.cycle)
            ok = false;
        if ($o1.signal)
            ok = false;
        if ($o2.cycle)
            ok = false;
        v = SIM_make_attr_boolean(ok);
    }
}
