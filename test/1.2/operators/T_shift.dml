/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device test;
import "testing.dml";

// Bug #5803

method test -> (bool ok) {
    local uint16 value = 0;
    local int16 svalue;

    ok = true;

    log "info": "0 << 8";
    if ((0 << 8) != 0) { ok = false; log "error": "wrong"; }

    log "info": "0 >> 8";
    if ((0 >> 8) != 0) { ok = false; log "error": "wrong"; }

    log "info": "1 << 8";
    if ((1 << 8) != 256) { ok = false; log "error": "wrong"; }

    log "info": "1 >> 8";
    if ((1 >> 8) != 0) { ok = false; log "error": "wrong"; }

    log "info": "256 >> 8";
    if ((256 >> 8) != 1) { ok = false; log "error": "wrong"; }

    log "info": "1 << 32";
    if ((1 << 32) != 0x100000000) { ok = false; log "error": "wrong"; }

    log "info": "1 >> 32";
    if ((1 >> 32) != 0) { ok = false; log "error": "wrong"; }

    log "info": "1 << 64";
    if ((1 << 64) - 1 != 0xffff_ffff_ffff_ffff) {
        ok = false;
        log "error": "wrong";
    }

    log "info": "0x100000000 >> 32";
    if ((0x100000000 >> 32) != 1) { ok = false; log "error": "wrong"; }

    log "info": "value <<= 8";
    value = 0;
    value <<= 8;
    if (value != 0) { ok = false; log "error": "wrong"; }

    log "info": "value = value << 8";
    value = 0;
    value = value << 8;
    if (value != 0) { ok = false; log "error": "wrong"; }

    log "info": "value >>= 8";
    value = 0x1100;
    value >>= 8;
    if (value != 0x11) { ok = false; log "error": "wrong"; }

    log "info": "value = value >> 8";
    value = 0x1100;
    value = value >> 8;
    if (value != 0x11) { ok = false; log "error": "wrong"; }

    log "info": "svalue = svalue >> 8";
    svalue = -1;
    svalue = svalue >> 8;
    if (svalue != -1) { ok = false; log "error": "wrong"; }

    log "info": "svalue = (svalue >> 4) >> 4";
    svalue = -1;
    svalue = (svalue >> 4) >> 4;
    if (svalue != -1) { ok = false; log "error": "wrong"; }

    log "info": "svalue = (svalue << 4) >> 4";
    svalue = -1;
    svalue = (svalue << 4) >> 4;
    if (svalue != -1) { ok = false; log "error": "wrong"; }

    log "info": "svalue = (svalue << 8) >> 8";
    svalue = 255;
    svalue = (svalue << 8) >> 8;
    if (svalue != 255) { ok = false; log "error": "wrong"; }

    local uint16 x = 0x8000;
    local uint64 y = (x << 15) + (x << 15);
    if (y != 0x80000000) { ok = false; log error: "%x", y; }
}
