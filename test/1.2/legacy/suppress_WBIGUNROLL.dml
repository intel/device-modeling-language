/*
  Â© 2024 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;

// expectations in this file are selectively enabled using SCAN-FOR-TAGS

data int zero = 0;

parameter zeroes_64 = [$zero, $zero, $zero, $zero, $zero, $zero, $zero, $zero,
                       $zero, $zero, $zero, $zero, $zero, $zero, $zero, $zero,
                       $zero, $zero, $zero, $zero, $zero, $zero, $zero, $zero,
                       $zero, $zero, $zero, $zero, $zero, $zero, $zero, $zero,
                       $zero, $zero, $zero, $zero, $zero, $zero, $zero, $zero,
                       $zero, $zero, $zero, $zero, $zero, $zero, $zero, $zero,
                       $zero, $zero, $zero, $zero, $zero, $zero, $zero, $zero,
                       $zero, $zero, $zero, $zero, $zero, $zero, $zero, $zero];

// Sixtyfourth zero is constant
parameter zeroes_65 = [$zero, $zero, $zero, $zero, $zero, $zero, $zero, $zero,
                       $zero, $zero, $zero, $zero, $zero, $zero, $zero, $zero,
                       $zero, $zero, $zero, $zero, $zero, $zero, $zero, $zero,
                       $zero, $zero, $zero, $zero, $zero, $zero, $zero, $zero,
                       $zero, $zero, $zero, $zero, $zero, $zero, $zero, $zero,
                       $zero, $zero, $zero, $zero, $zero, $zero, $zero, $zero,
                       $zero, $zero, $zero, $zero, $zero, $zero, $zero, $zero,
                       $zero, $zero, $zero, $zero, $zero, $zero, $zero, 0,
                       $zero];

bank b {
    register regs[i in 0..64] size 4 @ undefined;
}

method init {
    local int nonconstant;

    // no warning
    foreach x in ($zeroes_64) assert true;
    // The else branch is not considered an iteration
    select x in ($zeroes_64) where (x == nonconstant) {
        assert true;
    } else assert true;

    /// WARNING WBIGUNROLL
    foreach x in ($zeroes_65) assert true;
    /// WARNING WBIGUNROLL
    select x in ($zeroes_65) where (x == nonconstant) {
        assert true;
    } else assert true;

    // no warning
    foreach x in ($zeroes_65) {
        // As sixtyfourth bit is constant 0, DML 1.2 semantics eliminates this
        // if, and subsequently causes that iteration to be omitted from
        // codegen entirely; reducing the total count to 64
        if (x != 0) assert true;
    }

    // As sixtyfourth bit is constant 0, select can cut short at it, reducing
    // the total number of iterations to 64
    select x in ($zeroes_65) where (x == 0) {
        assert true;
    } else assert true;

    // As sixtyfourth bit is constant 0, select can omit the check and thus
    // iteration for it, reducing the total number of iterations to 64
    select x in ($zeroes_65) where (x != 0) {
        assert true;
    } else assert true;


    // WBIGUNROLL is only reported for compile-time lists defined via list
    // syntax, not the object lists generated by DMLC
    // no warning
    foreach x in ($b.unmapped_registers) assert true;
    select x in ($b.unmapped_registers) where (x == nonconstant) {
        assert true;
    } else assert true;
}
