/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device test;
import "testing.dml";

// This is used by the "debuggable" test case as well

method mmm(int x) -> (int y) {
    inline $nnn(x) -> (y);
}

method nnn(x) -> (y) {
    y = x;
}

method ooo(int32 p) {
    if (p != 1) {
        error "zero";
    }
}

method ppp(p) {
    if (p != 1) {
        error "zero";
    }
}

method undef(x) {
    if (defined(x)) error;
}

// This implicitly triggers generation of some auto-generated methods
bank b;

method test -> (bool ok)
{
    local bool b;
    local uint32_be_t be;
    local uint32_le_t le;
    inline $nnn(true) -> (b);
    assert b;
    local int i = 3;
    local int j;
    inline $nnn(i) -> (j);
    assert j == 3;
    inline $nnn(17) -> (j);
    assert j == 17;
    inline $mmm(i) -> (j);
    assert j == 3;
    inline $mmm(5) -> (j);
    assert j == 5;
    // bug 24816
    inline $mmm(8) -> (j);
    assert j == 8;
    inline $nnn(4) -> (be);
    assert be == 4;
    inline $nnn(be) -> (le);
    assert le == 4;
    inline $ooo(1);
    inline $ppp(1);
    inline $undef(undefined);
    ok = true;
}
