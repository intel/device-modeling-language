/*
  Â© 2021-2022 Intel Corporation
  SPDX-License-Identifier: MPL-2.0
*/
dml 1.2;
device test;
import "testing.dml";

method test -> (bool ok) {
    local int x = 2;
    ok = false;
    select a in ([1,2,3]) where (a == x)
        ok = (a == 2);
    else
        ok = false;
    assert ok;

    ok = false;
    select a in ([1,2,3]) where (a == 2)
        ok = (a == 2);
    else
        ok = false;
        
    assert ok;

    ok = false;
    select a in ([1,2,3]) where (a == 4)
        ok = true;
    else
        ok = false;
    assert !ok;

    ok = false;
    select a in ([1,2,3]) where (a == 4)
        ok = false;
    else
        ok = true;
    assert ok;

    ok = false;
    select a in ([1,2,3]) where (true)
        ok = true;
    else
        ok = false;
    assert ok;

    ok = false;
    select a in ([1,2,3]) where (false)
        ok = false;
    else
        ok = true;
    assert ok;

    ok = true;
    select a in ([]) where (true)
        ok = false;
    else
        ok = true;
    assert ok;

    ok = false;
    select a in ([]) where (true)
        ok = false;
    else
        ok = true;
    assert ok;

    ok = false;
    select a in ([]) where (false)
        ok = false;
    else
        ok = true;
    assert ok;

    // errors are suppressed in branches that are statically not taken
    select a in ([0, 1, 2]) where (a > 0) {
        if (a != 1) error;
    } else {
        error;
    }
    ok = true;
}
